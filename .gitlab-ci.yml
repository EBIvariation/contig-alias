stages:
    - test
    - package
    - deploy

variables:
    WS_ARTIFACT_PATH: target/contig-alias-$ENVIRONMENT_NAME.war
    MAVEN_SETTINGS: maven-settings.xml
    URL_MAVEN_SETTINGS: https://api.github.com/repos/EBIvariation/configuration/contents/eva-maven-settings.xml
    MEDIA_TYPE: application/vnd.github.raw

test:
    stage: test
    image: ubuntu:latest
    before_script:
        - apt-get update
        - apt-get upgrade -y
        - apt-get install -y curl jq
    script:
    - |
      for i in {1..5}; do
           echo "Finding Github CI status for ${CI_COMMIT_SHA}..." && export GITHUB_CI_STATUS=$(curl -s https://api.github.com/repos/EBIVariation/contig-alias/actions/runs | jq --arg COMMIT_TO_FIND $CI_COMMIT_SHA -r '.workflow_runs | map(select(.head_sha == $COMMIT_TO_FIND and .conclusion == "success"))[0].conclusion') && [[ $GITHUB_CI_STATUS == "success" ]] && echo "Github CI run was successful!"
           if [ $? -ne 0 ]; then
            echo "Retrying..."
            sleep 300
           else
            exit 0
           fi
          done
          exit 1
    environment:
        name: test-env
    only:
        - master
        - tags

# Not executed, parent job definition for package
.package:
    stage: package
    image: maven:3.6.1-jdk-8-alpine
    environment:
        name: $ENVIRONMENT_NAME
    before_script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $GITHUB_USER:$GITHUB_TOKEN -H "Accept:$MEDIA_TYPE" $URL_MAVEN_SETTINGS > $MAVEN_SETTINGS
    script:
        - mvn package --settings $MAVEN_SETTINGS -P $MAVEN_PROFILE -DskipTests
        - cp target/contig-alias*.war.original $WS_ARTIFACT_PATH
    after_script:
        - rm $MAVEN_SETTINGS
    artifacts:
        paths:
            - $WS_ARTIFACT_PATH

package-internal:
    extends: .package
    variables:
        ENVIRONMENT_NAME: internal
        MAVEN_PROFILE: internal
    only:
        - master

package-development:
    extends: .package
    variables:
        ENVIRONMENT_NAME: development
        MAVEN_PROFILE: development
    only:
        - master

package-production:
    extends: .package
    variables:
        ENVIRONMENT_NAME: production
        MAVEN_PROFILE: production
    only:
        - tags

# Not executed, parent job definition for deployments
.deploy-tomcat:
    stage: deploy
    image: alpine:3.9.5
    environment:
        name: $ENVIRONMENT_NAME
    script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $TOMCAT_USER:$TOMCAT_PASSWORD -T "$WS_ARTIFACT_PATH" "http://$TOMCAT_HOST/manager/text/deploy?update=true&path=/eva/webservices/contig-alias&version=$DATETIME" | grep "OK - Deployed application"

deploy-tomcat-internal:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: internal
        TOMCAT_USER: $TOMCAT_INTERNAL_USER
        TOMCAT_PASSWORD: $TOMCAT_INTERNAL_PASSWORD
        TOMCAT_HOST: $TOMCAT_INTERNAL_HOST
    dependencies:
        - package-internal
    only:
        - master

deploy-tomcat-development:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: development
        TOMCAT_USER: $TOMCAT_DEVELOPMENT_USER
        TOMCAT_PASSWORD: $TOMCAT_DEVELOPMENT_PASSWORD
        TOMCAT_HOST: $TOMCAT_DEVELOPMENT_HOST
    dependencies:
        - package-development
    only:
        - master

deploy-tomcat-production:
    extends: .deploy-tomcat
    when: manual
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_HOST
    dependencies:
        - package-production
    only:
        - tags

deploy-tomcat-production-fallback:
    extends: .deploy-tomcat
    when: manual
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_FALLBACK_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_FALLBACK_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_FALLBACK_HOST
    dependencies:
        - package-production
    only:
        - tags
